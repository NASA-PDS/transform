<?xml version="1.0" encoding="UTF-8"?>
<document>
  <properties>
    <title>Installation</title>
    <author email="Michael.Cayanan@jpl.nasa.gov">Michael Cayanan</author>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

  <body>
    <section name="Installation">
      <p>This document describes how to install the Transform Tool software contained in the <i>${project.artifactId}</i> package. The following topics can be found in this document:
      </p>

      <ul>
        <li><a href="#System_Requirements">System Requirements</a></li>
        <li><a href="#Unpacking_the_Package">Unpacking the Package</a></li>
        <li><a href="#Configuring_the_Environment">Configuring the Environment</a></li>
      </ul>
    </section>

    <section name="System Requirements">
      <p>If you run into issues attempting to run the software out-of-the-box, this section details the system requirements for installing and operating the software.
      </p>

      <subsection name="Java Runtime Environment">
        <p>This software was developed using Java and runs on any platform with a supported <a href="https://openjdk.java.net/install/">Java Runtime Environment (JRE)</a> >= Java  version 11. The software was specifically compiled for and tested in OpenJDK 15.0.1. The following commands test the local Java installation in a UNIX-based environment:
        </p>
        <source>
% which java
/usr/bin/java
% java -version
openjdk version "15.0.1" 2020-10-20
OpenJDK Runtime Environment (build 15.0.1+9)
OpenJDK 64-Bit Server VM (build 15.0.1+9, mixed mode, sharing)
        </source>

        <p><i>NOTE: Transform Tool requires 64-bit Java in order to enable Java Virtual Machine memory requirements. In version output above, note the line <b>Java HotSpot(TM) 64-Bit Server VM</b></i></p>

        <p><i><b>For Windows Users:</b> The 32-bit JRE is the default on Windows, and even the the online installer for Windows on the <a href="https://www.java.com/en/download/manual.jsp">Java Download All Operating Systems page</a> only installs the 32-bit JRE. If you see an error with text like "Invalid maximum heap size", you have the wrong JRE installed.</i></p>

        <p>If the either of these commands fail, it indicates Java is not installed or the version is not at least 1.9. Consult the local system administrator for installation of this software. For the do-it-yourself crowd, the Java software can be downloaded from the <a href="https://openjdk.java.net/install/" target="_blank">Java Download</a> page.
        </p>

    <section name="Unpacking the Package">
      <p>Download the <i>${project.artifactId}</i> package from <a href="https://github.com/NASA-PDS/${project.artifactId}/releases/latest" target="_blank">Github</a>. The binary distribution is available in identical zip or tar/gzip packages. The installation directory may vary from environment to environment but in UNIX-based environments it is typical to install software packages in the <i>/usr/local</i> directory and in Windows-based environments it is typical to install software packages in the <i>C:\Program Files</i> directory. Unpack the selected binary distribution file with one of the following commands:
      </p>

      <source>
% unzip ${project.artifactId}-${project.version}-bin.zip
or
% tar -xzvf ${project.artifactId}-${project.version}-bin.tar.gz
      </source>

      <p>Note: Depending on the platform, the native version of <i>tar</i> may produce an error when attempting to unpack the distribution file because many of the file paths are greater than 100 characters. If available, the GNU version of tar will resolve this problem. If that is not available or cannot be installed, the zipped package will work just fine in a UNIX environment.
      </p>

      <p>The commands above result in the creation of the <i>${project.artifactId}-${project.version}</i> directory with the following directory structure:
      </p>

      <ul>
        <li><b>README.txt</b><br/>
          <p>A README file directing the user to the available documentation for the project.
          </p>
        </li>
        <li><b>LICENSE.txt</b><br/>
          <p>The copyright notice from the <a href="http://www.caltech.edu/" target="_blank">California Institute of Technology</a> detailing the restrictions regarding the use and distribution of this software. Although the license is strictly worded, the software has been classified as Technology and Software Publicly Available (TSPA) and is available for <i>anyone</i> to download and use.
          </p>
        </li>
        <li><b>bin/</b><br/>
          <p>This directory contains batch and shell scripts for executing the tool.
          </p>
        </li>
        <li><b>doc/</b><br/>
          <p>This directory contains a local web site with the Transform Tool documentation, javadoc, unit test results and other configuration management related information. Just point the desired web browser to the <i>index.html</i> file in this directory.
          </p>
        </li>
        <li><b>examples/</b><br/>
          <p>This directory contains example PDS3 and PDS4 data products for use with the tool.
          </p>
        </li>
        <li><b>lib/</b><br/>
          <p>This directory contains the dependent jar files for the tool along with the executable jar file (${project.artifactId}-${project.version}.jar) containing the Transform Tool software.
          </p>
        </li>
        <li><b>external-programs/</b><br/>
          <p>This directory contains the external programs that the Transform Tool uses for some of its transformations.
          </p>
        </li>
      </ul>
    </section>

    <section name="Configuring the Environment">
      <p>In order to execute the Transform Tool, the local environment must first be configured appropriately. This section describes how to setup the user environment on UNIX-based and Windows machines.
      </p>

      <subsection name="UNIX-Based Environment">
        <p>This section details the environment setup for UNIX-based machines. The binary distribution includes a shell script that must be executed from the command-line. Setting the <i>PATH</i> environment variable to the location of this script, enables the shell script to be executed from any location on the local machine.
        </p>

        <p>The following command demonstrates how to set the <i>PATH</i> environment variable (in Bourne shell), by appending to its current setting:
        </p>

        <source>
% export PATH=${PATH}:/usr/local/${project.artifactId}-${project.version}/bin
        </source>

        <p>In addition, the shell script requires that the <i>JAVA_HOME</i> environment variable be set to the appropriate location of the Java installation on the local machine. The following command demonstrates how to set the <i>JAVA_HOME</i> environment variable:
        </p>

        <source>
% export JAVA_HOME=/path/to/java/home
        </source>

        <p>The system administrator for the local machine may need to be consulted for this location. The path specified should have a <i>bin</i> sub-directory that contains the <i>java</i> executable. This variable may also be defined within the scripts. Edit the scripts (files without the .bat extension) and change the line in the example above to represent the local Java installation.
        </p>
      </subsection>

      <subsection name="Windows Environment">
        <p>This section details the environment setup for Windows machines. The binary distribution includes a Windows batch script that must be executed from the command-line. Setting the <i>PATH</i> environment variable to the location of this script, enables the batch script to be executed from any location on the local machine. There are a few ways this can be done:
        </p>
        
        <ul>
          <li>Through the Command-Line</li>
          <li>Through the Windows System Properties Panel Interface</li>
        </ul>
        
        <p>Both of these method are detailed below. Select one based on your preference.
        </p>
        
        <p><b><i>Setting the Environment through Command-Line</i></b></p>

        <p>In your DOS Terminal Window, run the following command to set the <i>PATH</i> environment variable, by appending to its current setting:
        </p>

        <source>
C:\&gt; set PATH=%PATH%;"C:\Program Files\\${project.artifactId}-${project.version}\bin"
        </source>
        
        <p>Note that if the directory path to the Transform Tool contains spaces, the path will need to be surrounded in double quotes as shown above. 
        </p>

        <p>In addition, the batch script requires that the <i>JAVA_HOME</i> environment variable be set to the appropriate location of the Java installation on the local machine. The following command demonstrates how to set the <i>JAVA_HOME</i> environment variable:
        </p>

        <source>
C:\&gt; set JAVA_HOME="C:\Program Files\Java\jreX.X.X"
        </source>

        <p>The system administrator for the local machine may need to be consulted for this location. The path specified should have a <i>bin</i> sub-directory that contains the <i>java</i> executable. This variable may also be defined within the scripts. Edit the scripts (files with the .bat extension) and change the line in the example above to represent the local Java installation.
        </p>
        
        <p><b><i>Setting the Environment through the Windows System Properties Panel Interface</i></b></p>
        
        <p>An alternative method for setting the environment is through the Windows System Properties Interface.The instructions provided below were based off of a Windows 7 machine. Windows 8 and 10 users should be able to use these steps as well to modify their environment.
        </p>
        
        <p>The <i>Path</i> environment variable can be modified as follows:
        </p>

        <ul>
          <li>Click on the Windows icon on the bottom left. In the search text box, type in <i>edit system environment variables</i>. A search result called <i>Edit the system environment variables</i> should appear under the <i>Control Panel</i> area as follows:
          </li>
        </ul>
      
        <center><img src="../images/windows_search.jpg"/></center>
      
        <ul>
          <li>Click on <i>Edit the system environment variables</i> and in there, click on the <i>Environment Variables</i> button. At this point, you should now see a window like the one below:
          </li>
        </ul>

        <center><img src="../images/windows_panel.jpg"/></center>

        <ul>
          <li>Highlight the <i>Path</i> variable in the System Variables list and select the <i>Edit</i> button.
          </li>
          <li>Append to the current contents of the variable, the path to the <i>bin</i> directory within <i>${project.artifactId}</i> package. Separate the package path from the current contents of the variable with a semicolon.
          </li>
          <li>Select the <i>OK</i> button when you are finished editing the <i>Path</i> variable, then select the <i>OK</i> button on the Environment Variables window to apply the changes.
          </li>
        </ul>

        <p>New environment variables (e.g., JAVA_HOME) may also be specified in the system properties panel. Instead of selecting the <i>Edit</i> button from the System Variables list, select the <i>New</i> button and enter the variable name and value. Select the <i>OK</i> button when you are finished, then select the <i>OK</i> button on the Environment Variables window to apply the changes.
        </p>

        <p>Note: If you already have a DOS window open, you will need to close and re-open the window for the environment variable changes to take effect.
        </p>
      </subsection>

      <subsection name="Installation Location">
        <p>Both the shell and batch scripts for this software utilize system commands for determining the installation home directory that may or may not be available on all platforms. If these commands are not available in the current environment, their use can be replaced in the scripts by setting the <i>PARENT_DIR</i> variable with the actual installation path. Modify the UNIX-based shell scripts as follows (the actual installation path may be different in the current environment):
        </p>

        <source>
SCRIPT_DIR=`dirname $0`
PARENT_DIR=`cd ${SCRIPT_DIR}/.. &amp;&amp; pwd`

  should be replaced with:

PARENT_DIR=/usr/local/${project.artifactId}-${project.version}
        </source>

        <p>Modify the Windows-based batch scripts as follows (the actual installation path may be different in the current environment):
        </p>

        <source>
set SCRIPT_DIR=%~dps0
set PARENT_DIR=%SCRIPT_DIR%..
set LIB_DIR=%PARENT_DIR%\lib

  should be replaced with:

set PARENT_DIR="C:\Program Files\\${project.artifactId}-${project.version}"
set LIB_DIR="%PARENT_DIR%\lib"
        </source>
        
        <p>Note the use of double-quotes if the directory path to the Transform Tool contains spaces. 
        </p>
      </subsection>

      <subsection name="Java System Properties">
      <p>The Transform Tool utilizes external programs to perform some of its transformations. The Java system property, <i>external.programs.home</i>, is used to point to the top-level directory of the location of these programs. By default, the Transform Tool shell script and batch file come configured to point to the <i>external-programs</i> directory of the deployment package. The following shows how the <i>external.programs.home</i> system property is set in the Transform Tool startup scripts:
      </p>

      <p>In the <i>transform</i> shell script:
      </p>

      <source>
"${JAVA_HOME}"/bin/java -Xms256m -Xmx1024m -Dcom.sun.media.jai.disableMediaLib=true -Doverwrite.output=true -Dexternal.programs.home=${PARENT_DIR}/external-programs -jar ${TRANSFORM_JAR} "$@"
      </source>

      <p>In the <i>transform.bat</i> batch file:
      </p>

      <source>
"%JAVA_HOME%"\bin\java -Xms256m -Xmx1024m -Dcom.sun.media.jai.disableMediaLib=true -Doverwrite.output=true -Dexternal.programs.home=%PARENT_DIR%\external-programs -jar "%TRANSFORM_JAR%" %*
      </source>
      </subsection>
      <subsection name="Verifying the Installation">
        <p>Verify that the tool was installed correctly by running the shell script or Windows batch file with no arguments. The output should look something like the following:
        </p>

        <source>
% ${project.artifactId}

Type '${project.artifactId} -h' for usage
        </source>
      </subsection>
    </section>
  </body>
</document>
